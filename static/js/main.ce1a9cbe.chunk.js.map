{"version":3,"sources":["images/luke.jpg","images/leia.jpg","images/hanSolo.jpg","images/obiwan.jpg","images/Yoda.png","images/vader.png","images/palpatine.jpeg","images/loadingSpinner.gif","characterList.js","mockFetch.js","fetchCharacterData.js","SuspenseListNoKeys/Quote.js","SuspenseListNoKeys/MainImage.js","SuspenseListNoKeys/About.js","LoadingSpinner.js","SuspenseListNoKeys/Name.js","SuspenseListNoKeys/Character.js","BackToHome.js","SuspenseListNoKeys/index.js","SuspenseListWithKeys/Quote.js","SuspenseListWithKeys/MainImage.js","SuspenseListWithKeys/About.js","SuspenseListWithKeys/Name.js","SuspenseListWithKeys/Character.js","SuspenseListWithKeys/index.js","SuspenseListWithKeysAndTransition/Quote.js","SuspenseListWithKeysAndTransition/MainImage.js","SuspenseListWithKeysAndTransition/About.js","SuspenseListWithKeysAndTransition/Name.js","SuspenseListWithKeysAndTransition/Character.js","SuspenseListWithKeysAndTransition/index.js","SuspenseListNestedInSuspense/Quote.js","SuspenseListNestedInSuspense/MainImage.js","SuspenseListNestedInSuspense/About.js","SuspenseListNestedInSuspense/Name.js","SuspenseListNestedInSuspense/Character.js","SuspenseListNestedInSuspense/index.js","SuspenseListHacky/Quote.js","SuspenseListHacky/MainImage.js","SuspenseListHacky/About.js","SuspenseListHacky/Name.js","SuspenseListHacky/Character.js","SuspenseListHacky/index.js","Home.js","App.js","index.js"],"names":["module","exports","characterList","id","name","quote","img","luke","about","leia","han","obiwan","yoda","vader","palpatine","mockFetch","type","randomFetchTimeout","Math","random","Promise","resolve","data","find","char","setTimeout","fetchNameById","fetchQuoteById","fetchImageById","fetchAboutById","wrapPromise","promise","result","status","suspender","then","r","e","read","fetchCharacterData","characterId","namePromise","quotePromise","imagePromise","aboutPromise","image","Quote","resource","MainImage","props","alt","className","src","About","LoadingSpinner","loadingSpinner","Name","Character","buttonText","getNextCharacter","tail","revealOrder","fallback","onClick","BackToHome","to","process","App","characterIds","map","randomCharacterIdIndex","floor","length","randomCharacterId","useState","setCharacterId","setResource","newIds","filter","randomId","key","isPending","disabled","useTransition","timeoutMs","startTransition","style","display","Home","path","ReactDOM","createRoot","document","getElementById","render"],"mappings":"mIAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,+YCuF5BC,EA/EO,CACpB,CACEC,GAAI,EACJC,KAAM,iBACNC,MAAO,8CACPC,IAAKC,IACLC,MAAO,oRAKT,CACEL,GAAI,EACJC,KAAM,cACNC,MAAO,gDACPC,IAAKG,IACLD,MAAO,+NAIT,CACEL,GAAI,EACJC,KAAM,WACNC,MAAO,2CACPC,IAAKI,IACLF,MAAO,sXAOT,CACEL,GAAI,EACJC,KAAM,iBACNC,MAAO,qFACPC,IAAKK,IACLH,MAAO,iUAMT,CACEL,GAAI,EACJC,KAAM,OACNC,MAAO,+BACPC,IAAKM,IACLJ,MAAO,+VAMT,CACEL,GAAI,EACJC,KAAM,QACNC,MAAO,wCACPC,IAAKO,IACLL,MAAO,sUAMT,CACEL,GAAI,EACJC,KAAM,oBACNC,MAAO,4EACPC,IAAKQ,IACLN,MAAO,0XC5ELO,EAAY,SAACC,GAAD,OAAU,SAACb,GAC3B,IAAMc,EAAsC,IAAhBC,KAAKC,SAAmB,IACpD,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAMC,EAAOpB,EAAcqB,MAAK,SAAAC,GAAI,OAAIA,EAAKrB,KAAOA,KAAIa,GACxDS,YAAW,WACTJ,EAAQC,KACPL,QAIMS,EAAgBX,EAAU,QAC1BY,EAAiBZ,EAAU,SAC3Ba,EAAiBb,EAAU,OAC3Bc,EAAiBd,EAAU,SCOxC,SAASe,EAAYC,GACnB,IACIC,EADAC,EAAS,UAETC,EAAYH,EAAQI,MACtB,SAAAC,GACEH,EAAS,UACTD,EAASI,KAEX,SAAAC,GACEJ,EAAS,QACTD,EAASK,KAGb,MAAO,CACLC,KADK,WAEH,GAAe,YAAXL,EACF,MAAMC,EACD,GAAe,UAAXD,EACT,MAAMD,EACD,GAAe,YAAXC,EACT,OAAOD,IAMAO,MA9CY,SAACC,GAC1B,IAAMC,EAAcf,EAAcc,GAC5BE,EAAef,EAAea,GAC9BG,EAAef,EAAeY,GAC9BI,EAAef,EAAeW,GACpC,MAAO,CACLrC,GAAIqC,EACJpC,KAAM0B,EAAYW,GAClBpC,MAAOyB,EAAYY,GACnBG,MAAOf,EAAYa,GACnBnC,MAAOsB,EAAYc,KCARE,EAVD,SAAC,GAAkB,IACzBzC,EADwB,EAAf0C,SACQ1C,MAAMiC,OAC7B,OACE,2BACE,uCAASjC,EAAT,QCIS2C,EARG,SAAAC,GAAU,IAEpBJ,EADeI,EAAbF,SACeF,MAAMP,OAC7B,OACE,yBAAKY,IAAI,YAAYC,UAAU,aAAaC,IAAKP,KCKtCQ,EATD,SAAAJ,GAAU,IAEhBzC,EADeyC,EAAbF,SACevC,MAAM8B,OAE7B,OACE,uBAAGa,UAAU,SAAS3C,I,iBCGX8C,EAPQ,kBACrB,6BACE,yBAAKJ,IAAK,aAAcC,UAAU,kBAAkBC,IAAKG,QCM9CC,EATF,SAAAP,GAAU,IAEf7C,EADe6C,EAAbF,SACc3C,KAAKkC,OAE3B,OACE,4BAAKlC,ICoBMqD,EApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,iBAAkBZ,EAAjC,EAAiCA,SAAjC,OAChB,kBAAC,eAAD,CAAca,KAAK,YAAYC,YAAY,YACzC,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,EAAD,CAAMf,SAAUA,KAElB,kBAAC,WAAD,CAAUe,SAAU,kBAAC,EAAD,OAClB,kBAAC,EAAD,CAAOf,SAAUA,KAEnB,kBAAC,WAAD,CAAUe,SAAU,kBAAC,EAAD,OAClB,kBAAC,EAAD,CAAWf,SAAUA,KAEvB,kBAAC,WAAD,CAAUe,SAAU,kBAAC,EAAD,OAClB,kBAAC,EAAD,CAAOf,SAAUA,IACjB,4BAAQgB,QAASJ,GACdD,MCTMM,EATI,SAAAf,GAAK,OACtB,yBAAKE,UAAU,aACb,kBAAC,IAAD,CAAMc,GAAE,UAAKC,2BAAL,MACL,2BC8BQC,MA7Bf,WACE,IAAMC,EAAelE,EAAcmE,KAAI,SAAA7C,GAAI,OAAIA,EAAKrB,MAC9CmE,EAAyBpD,KAAKqD,MAAMrD,KAAKC,SAAWiD,EAAaI,QACjEC,EAAoBL,EAAaE,GAH1B,EAIyBI,mBAASD,GAJlC,mBAINjC,EAJM,KAIOmC,EAJP,OAKmBD,mBAASnC,EAAmBC,IAL/C,mBAKNO,EALM,KAKI6B,EALJ,KAgBb,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,0DACA,kBAAC,EAAD,CACEO,WAPa,oBAQbC,iBAfmB,WACvB,IAAMkB,EAAST,EAAaU,QAAO,SAAA3E,GAAE,OAAIA,IAAOqC,KAC1CuC,EAAWF,EAAO3D,KAAKqD,MAAMrD,KAAKC,SAAW0D,EAAOL,SAC1DG,EAAeI,GACfH,EAAYrC,EAAmBwC,KAY3BhC,SAAUA,MClBHD,G,MAVD,SAAC,GAAkB,IACzBzC,EADwB,EAAf0C,SACQ1C,MAAMiC,OAC7B,OACE,2BACE,uCAASjC,EAAT,SCIS2C,EARG,SAAAC,GAAU,IAEpBJ,EADeI,EAAbF,SACeF,MAAMP,OAC7B,OACE,yBAAKY,IAAI,YAAYC,UAAU,aAAaC,IAAKP,KCKtCQ,EATD,SAAAJ,GAAU,IAEhBzC,EADeyC,EAAbF,SACevC,MAAM8B,OAE7B,OACE,uBAAGa,UAAU,SAAS3C,ICIXgD,EATF,SAAAP,GAAU,IAEf7C,EADe6C,EAAbF,SACc3C,KAAKkC,OAE3B,OACE,4BAAKlC,ICoBMqD,EApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,iBAAkBZ,EAAjC,EAAiCA,SAAjC,OAChB,kBAAC,eAAD,CAAca,KAAK,YAAYC,YAAY,YACzC,kBAAC,WAAD,CAAUmB,IAAG,eAAUjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC9C,kBAAC,EAAD,CAAMf,SAAUA,KAElB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,EAAD,CAAOf,SAAUA,KAEnB,kBAAC,WAAD,CAAUiC,IAAG,oBAAejC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OACnD,kBAAC,EAAD,CAAWf,SAAUA,KAEvB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,EAAD,CAAOf,SAAUA,IACjB,4BAAQgB,QAASJ,GACdD,MCeMS,MA7Bf,WACE,IAAMC,EAAelE,EAAcmE,KAAI,SAAA7C,GAAI,OAAIA,EAAKrB,MAC9CmE,EAAyBpD,KAAKqD,MAAMrD,KAAKC,SAAWiD,EAAaI,QACjEC,EAAoBL,EAAaE,GAH1B,EAIyBI,mBAASD,GAJlC,mBAINjC,EAJM,KAIOmC,EAJP,OAKmBD,mBAASnC,EAAmBC,IAL/C,mBAKNO,EALM,KAKI6B,EALJ,KAgBb,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,0DACA,kBAAC,EAAD,CACEO,WAPa,oBAQbC,iBAfmB,WACvB,IAAMkB,EAAST,EAAaU,QAAO,SAAA3E,GAAE,OAAIA,IAAOqC,KAC1CuC,EAAWF,EAAO3D,KAAKqD,MAAMrD,KAAKC,SAAW0D,EAAOL,SAC1DG,EAAeI,GACfH,EAAYrC,EAAmBwC,KAY3BhC,SAAUA,MClBHD,G,MAVD,SAAC,GAAkB,IACzBzC,EADwB,EAAf0C,SACQ1C,MAAMiC,OAC7B,OACE,2BACE,uCAASjC,EAAT,SCIS2C,EARG,SAAAC,GAAU,IAEpBJ,EADeI,EAAbF,SACeF,MAAMP,OAC7B,OACE,yBAAKY,IAAI,YAAYC,UAAU,aAAaC,IAAKP,KCKtCQ,EATD,SAAAJ,GAAU,IAEhBzC,EADeyC,EAAbF,SACevC,MAAM8B,OAE7B,OACE,uBAAGa,UAAU,SAAS3C,ICIXgD,EATF,SAAAP,GAAU,IAEf7C,EADe6C,EAAbF,SACc3C,KAAKkC,OAE3B,OACE,4BAAKlC,ICoBMqD,EApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,iBAAkBsB,EAAjC,EAAiCA,UAAWlC,EAA5C,EAA4CA,SAA5C,OAChB,kBAAC,eAAD,CAAca,KAAK,YAAYC,YAAY,YACzC,kBAAC,WAAD,CAAUmB,IAAG,eAAUjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC9C,kBAAC,EAAD,CAAMf,SAAUA,KAElB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,EAAD,CAAOf,SAAUA,KAEnB,kBAAC,WAAD,CAAUiC,IAAG,oBAAejC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OACnD,kBAAC,EAAD,CAAWf,SAAUA,KAEvB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,EAAD,CAAOf,SAAUA,IACjB,4BAAQmC,SAAUD,EAAWlB,QAASJ,GACnCD,MCuBMS,MArCf,WACE,IAAMC,EAAelE,EAAcmE,KAAI,SAAA7C,GAAI,OAAIA,EAAKrB,MAC9CmE,EAAyBpD,KAAKqD,MAAMrD,KAAKC,SAAWiD,EAAaI,QACjEC,EAAoBL,EAAaE,GAH1B,EAIyBI,mBAASD,GAJlC,mBAINjC,EAJM,KAIOmC,EAJP,OAKmBD,mBAASnC,EAAmBC,IAL/C,mBAKNO,EALM,KAKI6B,EALJ,OASTO,wBAAc,CAChBC,UAAW,OAVA,mBAOXC,EAPW,KAQXJ,EARW,KAqBPvB,EAAauB,EAAY,uBAAyB,oBAExD,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,MACA,0DACA,kBAAC,EAAD,CACEO,WAAYA,EACZC,iBAjBmB,WACvB0B,GAAgB,WACd,IAAMR,EAAST,EAAaU,QAAO,SAAA3E,GAAE,OAAIA,IAAOqC,KAC1CuC,EAAWF,EAAO3D,KAAKqD,MAAMrD,KAAKC,SAAW0D,EAAOL,SAC1DG,EAAeI,GACfH,EAAYrC,EAAmBwC,QAa7BE,UAAWA,EACXlC,SAAUA,MC1BHD,I,MAVD,SAAC,GAAkB,IACzBzC,EADwB,EAAf0C,SACQ1C,MAAMiC,OAC7B,OACE,2BACE,uCAASjC,EAAT,SCIS2C,GARG,SAAAC,GAAU,IAEpBJ,EADeI,EAAbF,SACeF,MAAMP,OAC7B,OACE,yBAAKY,IAAI,YAAYC,UAAU,aAAaC,IAAKP,KCKtCQ,GATD,SAAAJ,GAAU,IAEhBzC,EADeyC,EAAbF,SACevC,MAAM8B,OAE7B,OACE,uBAAGa,UAAU,SAAS3C,ICIXgD,GATF,SAAAP,GAAU,IAEf7C,EADe6C,EAAbF,SACc3C,KAAKkC,OAE3B,OACE,4BAAKlC,ICoBMqD,GApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,iBAAkBsB,EAAjC,EAAiCA,UAAWlC,EAA5C,EAA4CA,SAA5C,OAChB,kBAAC,WAAD,CAAUe,SAAU,kBAAC,EAAD,OAClB,kBAAC,GAAD,CAAMf,SAAUA,IAChB,kBAAC,eAAD,CAAca,KAAK,YAAYC,YAAY,YACzC,kBAAC,WAAD,CAAUmB,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,GAAD,CAAOf,SAAUA,KAEnB,kBAAC,WAAD,CAAUiC,IAAG,oBAAejC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OACnD,kBAAC,GAAD,CAAWf,SAAUA,KAEvB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,GAAD,CAAOf,SAAUA,IACjB,4BAAQmC,SAAUD,EAAWlB,QAASJ,GACnCD,OCwBIS,OArCf,WACE,IAAMC,EAAelE,EAAcmE,KAAI,SAAA7C,GAAI,OAAIA,EAAKrB,MAC9CmE,EAAyBpD,KAAKqD,MAAMrD,KAAKC,SAAWiD,EAAaI,QACjEC,EAAoBL,EAAaE,GAH1B,EAIyBI,mBAASD,GAJlC,mBAINjC,EAJM,KAIOmC,EAJP,OAKmBD,mBAASnC,EAAmBC,IAL/C,mBAKNO,EALM,KAKI6B,EALJ,OASTO,wBAAc,CAChBC,UAAW,MAVA,mBAOXC,EAPW,KAQXJ,EARW,KAqBPvB,EAAauB,EAAY,uBAAyB,oBAExD,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,MACA,0DACA,kBAAC,GAAD,CACEO,WAAYA,EACZC,iBAjBmB,WACvB0B,GAAgB,WACd,IAAMR,EAAST,EAAaU,QAAO,SAAA3E,GAAE,OAAIA,IAAOqC,KAC1CuC,EAAWF,EAAO3D,KAAKqD,MAAMrD,KAAKC,SAAW0D,EAAOL,SAC1DG,EAAeI,GACfH,EAAYrC,EAAmBwC,QAa7BE,UAAWA,EACXlC,SAAUA,MC1BHD,I,MAVD,SAAC,GAAkB,IACzBzC,EADwB,EAAf0C,SACQ1C,MAAMiC,OAC7B,OACE,2BACE,uCAASjC,EAAT,SCIS2C,GARG,SAAAC,GAAU,IAEpBJ,EADeI,EAAbF,SACeF,MAAMP,OAC7B,OACE,yBAAKY,IAAI,YAAYC,UAAU,aAAaC,IAAKP,KCKtCQ,GATD,SAAAJ,GAAU,IAEhBzC,EADeyC,EAAbF,SACevC,MAAM8B,OAE7B,OACE,uBAAGa,UAAU,SAAS3C,ICIXgD,GATF,SAAAP,GAAU,IAEf7C,EADe6C,EAAbF,SACc3C,KAAKkC,OAE3B,OACE,4BAAKlC,ICoBMqD,GApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,iBAAkBsB,EAAjC,EAAiCA,UAAWlC,EAA5C,EAA4CA,SAA5C,OAChB,kBAAC,eAAD,CAAca,KAAK,YAAYC,YAAY,YACzC,kBAAC,WAAD,CAAUmB,IAAG,eAAUjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC9C,kBAAC,GAAD,CAAMf,SAAUA,KAElB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,GAAD,CAAOf,SAAUA,KAEnB,kBAAC,WAAD,CAAUiC,IAAG,oBAAejC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OACnD,kBAAC,GAAD,CAAWf,SAAUA,KAEvB,kBAAC,WAAD,CAAUiC,IAAG,gBAAWjC,EAAS5C,IAAM2D,SAAU,kBAAC,EAAD,OAC/C,kBAAC,GAAD,CAAOf,SAAUA,IACjB,4BAAQmC,SAAUD,EAAWlB,QAASJ,GACnCD,MCmCMS,OA7Cf,WACE,IAAMC,EAAelE,EAAcmE,KAAI,SAAA7C,GAAI,OAAIA,EAAKrB,MAC9CmE,EAAyBpD,KAAKqD,MAAMrD,KAAKC,SAAWiD,EAAaI,QACjEC,EAAoBL,EAAaE,GAH1B,EAIyBI,mBAASD,GAJlC,mBAINjC,EAJM,KAIOmC,EAJP,OAKmBD,mBAASnC,EAAmBC,IAL/C,mBAKNO,EALM,KAKI6B,EALJ,OASTO,wBAAc,CAChBC,UAAW,MAVA,mBAOXC,EAPW,KAQXJ,EARW,KAqBPvB,EAAauB,EAAY,uBAAyB,oBAExD,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,MACA,0DACA,kBAAC,WAAD,CAAUW,SAAU,MAClB,yBAAKwB,MAAO,CAAEC,QAAS,SACrB,kBAAC,GAAD,CAAMxC,SAAUA,IAChB,kBAAC,GAAD,CAAOA,SAAUA,IACjB,kBAAC,GAAD,CAAWA,SAAUA,IACrB,kBAAC,GAAD,CAAOA,SAAUA,MAGrB,kBAAC,GAAD,CACEW,WAAYA,EACZC,iBAzBmB,WACvB0B,GAAgB,WACd,IAAMR,EAAST,EAAaU,QAAO,SAAA3E,GAAE,OAAIA,IAAOqC,KAC1CuC,EAAWF,EAAO3D,KAAKqD,MAAMrD,KAAKC,SAAW0D,EAAOL,SAC1DG,EAAeI,GACfH,EAAYrC,EAAmBwC,QAqB7BE,UAAWA,EACXlC,SAAUA,MCZHyC,GAnCF,kBACX,4BACE,4BACE,kBAAC,IAAD,CACEvB,GAAE,UAAKC,2BAAL,2BADJ,8BAMF,4BACE,kBAAC,IAAD,CACED,GAAE,UAAKC,2BAAL,6BADJ,2BAMF,4BACE,kBAAC,IAAD,CAAMD,GAAE,UAAKC,2BAAL,4CAAR,0CAIF,4BACE,kBAAC,IAAD,CAAMD,GAAE,UAAKC,2BAAL,sCAAR,oCAIF,4BACE,kBAAC,IAAD,CAAMD,GAAE,UAAKC,2BAAL,yBAAR,4CCcSC,I,MA9BH,WACV,OACE,yBAAKhB,UAAU,YACb,wBAAIA,UAAU,iBAAd,0BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsC,KAAI,UAAKvB,2BAAL,2BACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAI,UAAKvB,2BAAL,6BACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAI,UAAKvB,2BAAL,4CACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAI,UAAKvB,2BAAL,sCACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAI,UAAKvB,2BAAL,yBACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAI,UAAKvB,2BAAL,MACT,kBAAC,GAAD,YC/BZwB,IAASC,WACPC,SAASC,eAAe,SACxBC,OAAO,kBAAC,GAAD,S","file":"static/js/main.ce1a9cbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/luke.7062f8ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leia.14e6dd5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hanSolo.e9f93d51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obiwan.6576a96a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yoda.497b8e02.png\";","module.exports = __webpack_public_path__ + \"static/media/vader.1dcacb03.png\";","module.exports = __webpack_public_path__ + \"static/media/palpatine.32fb73ae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/loadingSpinner.be0d9fd5.gif\";","import luke from './images/luke.jpg';\nimport leia from './images/leia.jpg';\nimport han from './images/hanSolo.jpg';\nimport obiwan from './images/obiwan.jpg';\nimport yoda from './images/Yoda.png';\nimport vader from './images/vader.png';\nimport palpatine from './images/palpatine.jpeg';\n\nconst characterList = [\n  {\n    id: 0,\n    name: 'Luke Skywalker',\n    quote: \"I'm Luke Skywalker. I'm here to rescue you.\",\n    img: luke,\n    about: 'Luke Skywalker is the son of Jedi Knight Anakin Skywalker and Senator '\n      + 'of Naboo, Padmé Amidala. He is taken in by his uncle and aunt, Owen and Beru '\n      + \"Lars, after the death of Padmé and Anakin's fall to the dark side. He is \"\n      + 'Force-sensitive and skilled with a lightsaber.'\n  },\n  {\n    id: 1,\n    name: 'Leia Organa',\n    quote: \"Help me, Obi-Wan Kenobi. You're my only hope.\",\n    img: leia,\n    about: 'Leia Organa, a Force-sensitive human female, was a princess of Alderaan, '\n      + 'a member of the Imperial Senate, a leader of the Alliance to Restore the '\n      + 'Republic, a member of the Galactic Senate, and general of the Resistance.'\n  },\n  {\n    id: 2,\n    name: 'Han Solo',\n    quote: 'You know, sometimes I amaze even myself.',\n    img: han,\n    about: 'Han Solo was a human male smuggler who became a leader in the Alliance to '\n      + 'to Restore the Republic and an instrumental figure in the defeat of the '\n      + 'Galactic Empire during the Galactic Civil War. He hailed from Corellia and '\n      + 'became a smuggler in the employ of Jabba the Hutt, even completing the '\n      + 'Kessel Run in just twelve parsecs with his prized ship, the Millennium '\n      + 'Falcon.',\n  },\n  {\n    id: 3,\n    name: 'Obi-Wan Kenobi',\n    quote: 'If you strike me down, I shall become more powerful than you can possibly imagine.',\n    img: obiwan,\n    about: 'Obi-Wan Kenobi was a Force-sensitive human male and a legendary Jedi '\n      + 'Master and member of the Jedi High Council during the Fall of the Republic. '\n      + 'During the Age of the Empire, he went by the alias of Ben Kenobi in order to '\n      + 'hide from the regime that drove the Jedi to near extinction in the aftermath '\n      + 'of the Clone Wars.',\n  },\n  {\n    id: 4,\n    name: 'Yoda',\n    quote: 'Judge me by my size, do you?',\n    img: yoda,\n    about: 'Yoda, a Force-sensitive male being belonging to a mysterious species, '\n      + 'was a legendary Jedi Master who witnessed the rise and fall of the Galactic '\n      + 'Republic, followed by the rise of the Galactic Empire. Small in stature but '\n      + 'revered for his wisdom and power, Yoda trained generations of Jedi, '\n      + 'ultimately serving as the Grand Master of the Jedi Order.'\n  },\n  {\n    id: 5,\n    name: 'Vader',\n    quote: 'I find your lack of faith disturbing.',\n    img: vader,\n    about: 'Once a heroic Jedi Knight, Darth Vader was seduced by the dark side of '\n      + 'the Force, became a Sith Lord, and led the Empire’s eradication of the Jedi '\n      + 'Order. He remained in service of the Emperor -- the evil Darth Sidious -- '\n      + 'for decades, enforcing his Master’s will and seeking to crush the fledgling '\n      + 'Rebel Alliance.'\n  },\n  {\n    id: 6,\n    name: 'Emperor Palpatine',\n    quote: 'Soon the rebellion will be crushed and young Skywalker will be one of us.',\n    img: palpatine,\n    about: 'Emperor Palpatine was a Force-sensitive Human male who served as the last '\n      + 'Supreme Chancellor of the Galactic Republic and the first Emperor of the '\n      + 'Galactic Empire. A Dark Lord of the Sith in the Order of the Sith Lords, '\n      + 'recorded by history as the most successful who had ever lived, his deeds '\n      + 'resulted in overthrow the ancient Republic and the noble Jedi Order from '\n      + 'within.'\n  }\n];\n\nexport default characterList;\n","import characterList from \"./characterList\";\n\nconst mockFetch = (type) => (id) => {\n  const randomFetchTimeout = (Math.random() * 2000) + 1000  // between 1 and 3 seconds\n  return new Promise(resolve => {\n    const data = characterList.find(char => char.id === id)[type];\n    setTimeout(() => {\n      resolve(data);\n    }, randomFetchTimeout);\n  });\n};\n\nexport const fetchNameById = mockFetch('name');\nexport const fetchQuoteById = mockFetch('quote');\nexport const fetchImageById = mockFetch('img');\nexport const fetchAboutById = mockFetch('about');\n\n","import { fetchNameById, fetchQuoteById, fetchImageById, fetchAboutById } from \"./mockFetch\";\n\nconst fetchCharacterData = (characterId) => {\n  const namePromise = fetchNameById(characterId);\n  const quotePromise = fetchQuoteById(characterId);\n  const imagePromise = fetchImageById(characterId);\n  const aboutPromise = fetchAboutById(characterId);\n  return {\n    id: characterId,\n    name: wrapPromise(namePromise),\n    quote: wrapPromise(quotePromise),\n    image: wrapPromise(imagePromise),\n    about: wrapPromise(aboutPromise),\n  };\n};\n\n\n// The React Docs said not to copy and paste this into your code\n// But I copy/pasted anyway\n// It said real implementations can be significantly more complex\n// But my implementation is neither real nor complex, so it's okay\n// Code comes from: https://codesandbox.io/s/frosty-hermann-bztrp\nfunction wrapPromise(promise) {\n  let status = \"pending\";\n  let result;\n  let suspender = promise.then(\n    r => {\n      status = \"success\";\n      result = r;\n    },\n    e => {\n      status = \"error\";\n      result = e;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n};\n\nexport default fetchCharacterData;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport loadingSpinner from './images/loadingSpinner.gif';\n\nconst LoadingSpinner = () => (\n  <div>\n    <img alt={'loading...'} className=\"loading-spinner\" src={loadingSpinner} />\n  </div>\n);\n\n\nexport default LoadingSpinner;","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, resource }) => (\n  <SuspenseList tail=\"collapsed\" revealOrder=\"forwards\">\n    <Suspense fallback={<LoadingSpinner />}>\n      <Name resource={resource} />\n    </Suspense>\n    <Suspense fallback={<LoadingSpinner />}>\n      <Quote resource={resource} />\n    </Suspense>\n    <Suspense fallback={<LoadingSpinner />}>\n      <MainImage resource={resource} />\n    </Suspense>\n    <Suspense fallback={<LoadingSpinner />}>\n      <About resource={resource} />\n      <button onClick={getNextCharacter}>\n        {buttonText}\n      </button>\n    </Suspense>\n  </SuspenseList>\n);\n\nexport default Character;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BackToHome = props => (\n  <div className='back-home'>\n    <Link to={`${process.env.PUBLIC_URL}/`}>\n      {'<<< Back To Home Page'}\n    </Link>\n  </div>\n);\n\n\nexport default BackToHome;\n","import React, { useState } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n\n  const getNextCharacter = () => {\n    const newIds = characterIds.filter(id => id !== characterId);\n    const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n    setCharacterId(randomId);\n    setResource(fetchCharacterData(randomId));\n  };\n\n  const buttonText = 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, resource }) => (\n  <SuspenseList tail=\"collapsed\" revealOrder=\"forwards\">\n    <Suspense key={`Name-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Name resource={resource} />\n    </Suspense>\n    <Suspense key={`Quote-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Quote resource={resource} />\n    </Suspense>\n    <Suspense key={`MainImage-${resource.id}`} fallback={<LoadingSpinner />}>\n      <MainImage resource={resource} />\n    </Suspense>\n    <Suspense key={`About-${resource.id}`} fallback={<LoadingSpinner />}>\n      <About resource={resource} />\n      <button onClick={getNextCharacter}>\n        {buttonText}\n      </button>\n    </Suspense>\n  </SuspenseList>\n);\n\nexport default Character;\n","import React, { useState } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n\n  const getNextCharacter = () => {\n    const newIds = characterIds.filter(id => id !== characterId);\n    const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n    setCharacterId(randomId);\n    setResource(fetchCharacterData(randomId));\n  };\n\n  const buttonText = 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, isPending, resource }) => (\n  <SuspenseList tail=\"collapsed\" revealOrder=\"forwards\">\n    <Suspense key={`Name-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Name resource={resource} />\n    </Suspense>\n    <Suspense key={`Quote-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Quote resource={resource} />\n    </Suspense>\n    <Suspense key={`MainImage-${resource.id}`} fallback={<LoadingSpinner />}>\n      <MainImage resource={resource} />\n    </Suspense>\n    <Suspense key={`About-${resource.id}`} fallback={<LoadingSpinner />}>\n      <About resource={resource} />\n      <button disabled={isPending} onClick={getNextCharacter}>\n        {buttonText}\n      </button>\n    </Suspense>\n  </SuspenseList>\n);\n\nexport default Character;\n","import React, { useState, useTransition } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n  const [\n    startTransition,\n    isPending\n  ] = useTransition({\n    timeoutMs: 2300\n  });\n  const getNextCharacter = () => {\n    startTransition(() => {\n      const newIds = characterIds.filter(id => id !== characterId);\n      const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n      setCharacterId(randomId);\n      setResource(fetchCharacterData(randomId));\n    })\n  };\n\n  const buttonText = isPending ? 'LOADING CHARACTER...' : 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        isPending={isPending}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, isPending, resource }) => (\n  <Suspense fallback={<LoadingSpinner />}>\n    <Name resource={resource} />\n    <SuspenseList tail=\"collapsed\" revealOrder=\"forwards\">\n      <Suspense key={`Quote-${resource.id}`} fallback={<LoadingSpinner />}>\n        <Quote resource={resource} />\n      </Suspense>\n      <Suspense key={`MainImage-${resource.id}`} fallback={<LoadingSpinner />}>\n        <MainImage resource={resource} />\n      </Suspense>\n      <Suspense key={`About-${resource.id}`} fallback={<LoadingSpinner />}>\n        <About resource={resource} />\n        <button disabled={isPending} onClick={getNextCharacter}>\n          {buttonText}\n        </button>\n      </Suspense>\n    </SuspenseList>\n  </Suspense >\n);\n\nexport default Character;\n","import React, { useState, useTransition } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n  const [\n    startTransition,\n    isPending\n  ] = useTransition({\n    timeoutMs: 3000\n  });\n  const getNextCharacter = () => {\n    startTransition(() => {\n      const newIds = characterIds.filter(id => id !== characterId);\n      const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n      setCharacterId(randomId);\n      setResource(fetchCharacterData(randomId));\n    })\n  };\n\n  const buttonText = isPending ? 'LOADING CHARACTER...' : 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        isPending={isPending}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, isPending, resource }) => (\n  <SuspenseList tail=\"collapsed\" revealOrder=\"forwards\">\n    <Suspense key={`Name-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Name resource={resource} />\n    </Suspense>\n    <Suspense key={`Quote-${resource.id}`} fallback={<LoadingSpinner />}>\n      <Quote resource={resource} />\n    </Suspense>\n    <Suspense key={`MainImage-${resource.id}`} fallback={<LoadingSpinner />}>\n      <MainImage resource={resource} />\n    </Suspense>\n    <Suspense key={`About-${resource.id}`} fallback={<LoadingSpinner />}>\n      <About resource={resource} />\n      <button disabled={isPending} onClick={getNextCharacter}>\n        {buttonText}\n      </button>\n    </Suspense>\n  </SuspenseList>\n);\n\nexport default Character;\n","import React, { useState, useTransition, Suspense } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\nimport Name from './Name';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n  const [\n    startTransition,\n    isPending\n  ] = useTransition({\n    timeoutMs: 3000\n  });\n  const getNextCharacter = () => {\n    startTransition(() => {\n      const newIds = characterIds.filter(id => id !== characterId);\n      const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n      setCharacterId(randomId);\n      setResource(fetchCharacterData(randomId));\n    })\n  };\n\n  const buttonText = isPending ? 'LOADING CHARACTER...' : 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Suspense fallback={null}>\n        <div style={{ display: 'none' }}>\n          <Name resource={resource} />\n          <Quote resource={resource} />\n          <MainImage resource={resource} />\n          <About resource={resource} />\n        </div>\n      </Suspense>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        isPending={isPending}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n  <ul>\n    <li>\n      <Link\n        to={`${process.env.PUBLIC_URL}/suspense-list-no-keys`}\n      >\n        SuspenseList Without Keys\n      </Link>\n    </li>\n    <li>\n      <Link\n        to={`${process.env.PUBLIC_URL}/suspense-list-with-keys`}\n      >\n        SuspenseList With Keys\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/suspense-list-with-keys-and-transition`}>\n        SuspenseList With Keys and Transition\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/suspense-list-nested-in-suspense`}>\n        SuspenseList Nested in Suspense\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/suspense-list-hacky`}>\n        Hacky Solution to SuspenseList Issues\n      </Link>\n    </li>\n  </ul>\n)\n\n\nexport default Home;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport SuspenseListNoKeys from './SuspenseListNoKeys';\nimport SuspenseListWithKeys from './SuspenseListWithKeys';\nimport SuspenseListWithKeysAndTransition from './SuspenseListWithKeysAndTransition';\nimport SuspenseListNestedInSuspense from './SuspenseListNestedInSuspense';\nimport SuspenseListHacky from './SuspenseListHacky';\nimport Home from './Home';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='App-main'>\n      <h1 className='project-title'>SuspenseList Struggles</h1>\n      <Router>\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list-no-keys`}>\n            <SuspenseListNoKeys />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list-with-keys`}>\n            <SuspenseListWithKeys />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list-with-keys-and-transition`}>\n            <SuspenseListWithKeysAndTransition />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list-nested-in-suspense`}>\n            <SuspenseListNestedInSuspense />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list-hacky`}>\n            <SuspenseListHacky />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/`}>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.createRoot(\n  document.getElementById('root')\n).render(<App />);\n"],"sourceRoot":""}